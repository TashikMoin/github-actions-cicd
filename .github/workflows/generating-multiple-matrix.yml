name: Platform Release

on:
  workflow_dispatch:
    inputs:
      customers:
        description: 'Customer JSON'
        required: true
        default: '[{"Customer": "itc", "Environments": ["development"]}, {"Customer": "be", "Environments": ["development", "staging", "production"]}, {"Customer": "sp", "Environments": ["staging"]}]'

jobs:
  pre-processing:
    runs-on: ubuntu-latest
    env:
      customers: ${{ github.event.inputs.customers }}
    outputs:
      development_matrix: ${{ steps.set-matrix.outputs.development_matrix }}
      staging_matrix: ${{ steps.set-matrix.outputs.staging_matrix }}
      production_matrix: ${{ steps.set-matrix.outputs.production_matrix }}
    steps:
    - id: set-matrix
      run: |
        development_matrix=$(echo "$customers" | jq -c 'map(select(.Environments | index("development") != null) | { Customer: .Customer, Environment: "development" })')
        staging_matrix=$(echo "$customers" | jq -c 'map(select(.Environments | index("staging") != null) | { Customer: .Customer, Environment: "staging" })')
        production_matrix=$(echo "$customers" | jq -c 'map(select(.Environments | index("production") != null) | { Customer: .Customer, Environment: "production" })')
        echo "development_matrix={\"include\":$development_matrix}" >> $GITHUB_OUTPUT
        echo "staging_matrix={\"include\":$staging_matrix}" >> $GITHUB_OUTPUT
        echo "production_matrix={\"include\":$production_matrix}" >> $GITHUB_OUTPUT

  platform-release-development:
    name: platform-release-${{ matrix.Customer }}-${{ matrix.Environment }}
    needs: pre-processing
    environment: ${{ matrix.Customer }}-${{ matrix.Environment }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.pre-processing.outputs.development_matrix) }}
    steps:
    - run: |
        echo "Matrix - Customer ${{ matrix.Customer }}, Environments ${{ matrix.Environment }}"

  platform-release-staging:
    name: platform-release-${{ matrix.Customer }}-${{ matrix.Environment }}
    needs: [ pre-processing , platform-release-development ]
    environment: ${{ matrix.Customer }}-${{ matrix.Environment }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.pre-processing.outputs.staging_matrix) }}
    steps:
    - run: |
        echo "Matrix - Customer ${{ matrix.Customer }}, Environments ${{ matrix.Environment }}"

  platform-release-production:
    name: platform-release-${{ matrix.Customer }}-${{ matrix.Environment }}
    needs: [ pre-processing , platform-release-staging ]
    environment: ${{ matrix.Customer }}-${{ matrix.Environment }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.pre-processing.outputs.production_matrix) }}
    steps:
    - run: |
        echo "Matrix - Customer ${{ matrix.Customer }}, Environments ${{ matrix.Environment }}"
